#unzip
rule unzip:
	input:
		#"{dataset}/CTCF/ENCFF960ZGP.bed.gz",
		"{dataset}/HP1/ENCFF417SVR.bed.gz"
	output:
		#"{dataset}/CTCF/ENCFF960ZGP.bed",
		"{dataset}/HP1/ENCFF417SVR.bed"
	resources:
		mem = 12000
	threads: 1
	shell:
		"""
		module load samtools-1.6
		bgzip -d {input}
		"""

#siin vahel encode faili jaoks edited versioon command line
	
#Sort ctcf peaks file by SNP position
rule sort_ctcf:
	input:
		#"{dataset}/CTCF/ENCFF960ZGP.edited.bed",
		"{dataset}/HP1/ENCFF417SVR.edited.bed"
	output:
		#protected("{dataset}/CTCF/ENCFF960ZGP.sorted.bed.gz"),
		protected("{dataset}/HP1/ENCFF417SVR.sorted.bed.gz")
	resources:
		mem = 12000
	threads: 20
	shell:
		"""
		module load samtools-1.6
		LANG=C sort --parallel=20 -k1,1n -k2,2n -k3,3n {input} | bgzip > {output}
		rm {input}
		"""

# 1, 2, 3 <- peak chr, start, end		
		
#Tabix-index ctcf peak file
rule index_qtltools_output:
	input:
		#"{dataset}/CTCF/ENCFF960ZGP.sorted.bed.gz",
		"{dataset}/HP1/ENCFF417SVR.sorted.bed.gz"
	output:
		#"{dataset}/CTCF/ENCFF960ZGP.sorted.bed.gz.tbi",
		"{dataset}/HP1/ENCFF417SVR.sorted.bed.gz.tbi"
	resources:
		mem = 4000
	threads: 1
	shell:
		"""
		module load samtools-1.6
		tabix -s1 -b2 -e3 -f {input}
		"""
		
rule make_all:
	input:
		#expand("{dataset}/CTCF/ENCFF960ZGP.sorted.bed.gz.tbi", dataset=config["path"]),
		expand("{dataset}/HP1/ENCFF417SVR.sorted.bed.gz.tbi", dataset=config["path"])
	output:
		"out.txt"
	resources:
		mem = 100
	threads: 1
	shell:
		"echo 'Done' > {output}"